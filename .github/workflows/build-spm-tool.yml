on:
  workflow_call: {}

env:
  __LINUX_OS: ubuntu-latest
  __LINUX_SWIFT_VERSION: 5.8
  __LINUX_SWIFT_FLAGS: "-Xswiftc -static-stdlib -Xlinker -lCoreFoundation -Xlinker -lCFURLSessionInterface"
  __XCODE_VERSION: 14.2
  __MACOS_OS: macos-12
  __MACOS_SWIFT_FLAGS: "--arch x86_64"

defaults:
  run:
    shell: bash --noprofile --norc -x -euo pipefail {0}

jobs:
  versioning:
    uses: grigorye/ReusableWorkflows/.github/workflows/generate-versions.yml@v21

  env:
    name: "Prepare"
    runs-on: ubuntu-latest
    outputs:
      __LINUX_SWIFT_VERSION: ${{ steps.gen.outputs.__LINUX_SWIFT_VERSION }}
      __LINUX_SWIFT_FLAGS: ${{ steps.gen.outputs.__LINUX_SWIFT_FLAGS }}
      __LINUX_OS: ${{ steps.gen.outputs.__LINUX_OS }}
      __XCODE_VERSION: ${{ steps.gen.outputs.__XCODE_VERSION }}
      __MACOS_OS: ${{ steps.gen.outputs.__MACOS_OS }}
      __MACOS_SWIFT_FLAGS: ${{ steps.gen.outputs.__MACOS_SWIFT_FLAGS }}
    steps:
      - name: "Prepare environment variables for conversion to JSON"
        run: |
          echo '${{ toJSON(env) }}' > env.json
      - id: jq
        uses: sergeysova/jq-action@v2
        with:
          multiline: true
          cmd: |
            jq -r 'to_entries | .[] | .key + "=" + (.value | @sh)' env.json
      - name: "Convert environment variables to output"
        id: gen
        run: |
          echo '${{ steps.jq.outputs.value }}' | sed 's/%0A/\n/g' >> $GITHUB_OUTPUT

  build:
    needs:
      - versioning
      - env
      - meta
    strategy:
      matrix:
        include:
          - os: ${{ needs.env.outputs.__LINUX_OS }}
            image: swift:${{ needs.env.outputs.__LINUX_SWIFT_VERSION }}-focal
            swift_flags: ${{ needs.env.outputs.__LINUX_SWIFT_FLAGS }}
          - os: ${{ needs.env.outputs.__MACOS_OS }}
            xcode_version: ${{ needs.env.outputs.__XCODE_VERSION }}
            swift_flags: ${{ needs.env.outputs.__MACOS_SWIFT_FLAGS }}
    uses: grigorye/ReusableWorkflows/.github/workflows/build-spm-tool-reusable.yml@v21
    with:
      bundle_version: ${{ needs.versioning.outputs.bundle_version }}
      os: ${{ matrix.os }}
      image: ${{ matrix.image }}
      swift_flags: ${{ matrix.swift_flags }}
      xcode_version: ${{ matrix.xcode_version }}
      product_name: ${{ needs.meta.outputs.product_name }}

  meta:
    name: "Introspect Swift package"
    needs:
      - env
    runs-on: ${{ needs.env.outputs.__LINUX_OS }}
    container:
      image: swift:${{ needs.env.outputs.__LINUX_SWIFT_VERSION }}-focal
    outputs:
      product_name: ${{ steps.gen.outputs.product_name }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          swift package dump-package > package-dump.json
      - id: product-name
        uses: sergeysova/jq-action@v2
        with:
          cmd: |
            jq -r '.products[0].name' package-dump.json
      - id: gen
        run: |
          product_name=${{ steps.product-name.outputs.value }}
          echo "product_name=$product_name" >> $GITHUB_OUTPUT
