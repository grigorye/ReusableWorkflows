name: Tests

on:
  workflow_call:
    inputs:
      unit-tests-scheme:
        type: string
        required: false
      snapshot-tests-scheme:
        type: string
        required: false
      ui-snapshot-tests-scheme:
        type: string
        required: false  
      runs-on:
        type: string
        required: true
    outputs:
      tests-passed:
        value: "${{ (inputs.unit-tests-scheme == '' || (jobs.unit-tests.result == 'success' && jobs.unit-tests.outputs.tests-passed == 'true')) && (inputs.snapshot-tests-scheme == '' || (jobs.snapshot-tests.result == 'success' && jobs.snapshot-tests.outputs.tests-passed == 'true')) && (inputs.ui-snapshot-tests-scheme == '' || (jobs.ui-snapshot-tests.result == 'success' && jobs.ui-snapshot-tests.outputs.tests-passed == 'true')) }}"

defaults:
  run:
    shell: bash --noprofile --norc -x -euo pipefail {0}

jobs:
  unit-tests:
    name: 'Unit Tests'
    uses: grigorye/ReusableWorkflows/.github/workflows/tests-reusable.yml@v23
    secrets: inherit
    with:
      runs-on: "['${{ inputs.runs-on }}', 'build']"
      testsScheme: ${{ inputs.unit-tests-scheme }}
      testsKind: 'UnitTests'
      testsName: 'Unit Tests'

  snapshot-tests:
    name: 'Snapshots'
    if: inputs.snapshot-tests-scheme != ''
    uses: grigorye/ReusableWorkflows/.github/workflows/tests-reusable.yml@v23
    secrets: inherit
    with:
      runs-on: "['${{ inputs.runs-on }}', 'snapshots']"
      testsScheme: ${{ inputs.snapshot-tests-scheme }}
      testsKind: 'Snapshots'
      testsName: 'Snapshots'

  ui-snapshot-tests:
    name: 'UI Test Snapshots'
    if: inputs.ui-snapshot-tests-scheme != ''
    uses: grigorye/ReusableWorkflows/.github/workflows/tests-reusable.yml@v23
    secrets: inherit
    with:
      runs-on: "['${{ inputs.runs-on }}', 'ui-automation']"
      testsScheme: ${{ inputs.ui-snapshot-tests-scheme }}
      testsKind: 'Snapshots'
      testsName: 'UI Snapshots'
