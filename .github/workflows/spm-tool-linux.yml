name: Linux

on:
  workflow_call:
    inputs:
      bundle_version:
        type: string
        required: true

defaults:
  run:
    shell: bash --noprofile --norc -x -euo pipefail {0}

jobs:
  release:
    name: "Build (Linux)"
    runs-on: ubuntu-latest
    container:
      image: swift:5.8-focal
    steps:
      - name: Prepare Environment
        run: |
          __BUNDLE_VERSION=${{ inputs.bundle_version }}
          echo "__BUNDLE_VERSION=$__BUNDLE_VERSION" >> $GITHUB_ENV
      - if: ${{ env.ACT }}
        name: Hack container for local development
        run: |
          apt-get update
          apt-get install -y nodejs zstd
      - name: Install build tools
        run: |
          apt-get update
          apt-get install -y jq
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: "Introspect Swift Package"
        run: |
          __PRODUCT_NAME=$(swift package dump-package | jq -r '.products[0].name')
          echo "__PRODUCT_NAME=$__PRODUCT_NAME" >> $GITHUB_ENV
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: "Swift Build"
        run: |
          swift build -c release -Xswiftc -static-stdlib -Xlinker -lCoreFoundation -Xlinker -lCFURLSessionInterface
      - run: |
          chmod -R go+rx .build
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.__PRODUCT_NAME }}
          # `release` is a symlink, apply glob as a workaround for https://github.com/actions/upload-artifact/issues/92
          path: |
            .build/release*/${{ env.__PRODUCT_NAME }}
            !.build/release?*

  test:
    name: "Test (Linux)"
    runs-on: ubuntu-latest
    container:
      image: swift:5.8-focal
    steps:
      - name: Prepare Environment
        run: |
          __BUNDLE_VERSION=${{ inputs.bundle_version }}
          echo "__BUNDLE_VERSION=$__BUNDLE_VERSION" >> $GITHUB_ENV
      - if: ${{ env.ACT }}
        name: Hack container for local development
        run: |
          apt-get update
          apt-get install -y nodejs zstd
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - run: |
          swift test --enable-test-discovery
      - run: |
          chmod -R go+rx .build
