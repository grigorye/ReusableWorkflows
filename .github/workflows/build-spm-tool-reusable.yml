on:
  workflow_call:
    inputs:
      bundle_version:
        type: string
        required: true
      os:
        type: string
        required: true
      image:
        type: string
        required: false
      swift_flags:
        type: string
        required: false
      xcode_version:
        type: string
        required: false
      product_name:
        type: string
        required: true

defaults:
  run:
    shell: bash --noprofile --norc -x -euo pipefail {0}

jobs:
  release:
    name: "Build (${{ inputs.os }})"
    runs-on: ${{ inputs.os }} # ubuntu-latest
    container:
      image: ${{ inputs.image }} # swift:5.8-focal
    steps:
      - name: "Prepare Environment"
        run: |
          __BUNDLE_VERSION=${{ inputs.bundle_version }}
          echo "__BUNDLE_VERSION=$__BUNDLE_VERSION" >> $GITHUB_ENV
          __PRODUCT_NAME=${{ inputs.product_name }}
          echo "__PRODUCT_NAME=$__PRODUCT_NAME" >> $GITHUB_ENV
      - if: ${{ env.ACT }}
        name: "Hack container for local development"
        run: |
          apt-get update
          apt-get install -y nodejs zstd
      - uses: actions/checkout@v3
        with:
          submodules: true
      - if: ${{ inputs.os == 'macos-latest' }}
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: ${{ inputs.xcode_version }}
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: .build
          key: ${{ runner.os }}-swift-${{ inputs.swift_version }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: "Swift Build"
        run: |
          swift build -c release ${{ inputs.swift_flags }}
      - run: |
          chmod -R go+rx .build
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.__PRODUCT_NAME }}
          # `release` is a symlink, apply glob as a workaround for https://github.com/actions/upload-artifact/issues/92
          path: |
            .build/release*/${{ env.__PRODUCT_NAME }}
            !.build/release?*

  test:
    name: "Test (${{ inputs.os }})"
    runs-on: ${{ inputs.os }} # ubuntu-latest
    container:
      image: ${{ inputs.image }} # swift:5.8-focal
    steps:
      - name: "Prepare Environment"
        run: |
          __BUNDLE_VERSION=${{ inputs.bundle_version }}
          echo "__BUNDLE_VERSION=$__BUNDLE_VERSION" >> $GITHUB_ENV
      - if: ${{ env.ACT }}
        name: "Hack container for local development"
        run: |
          apt-get update
          apt-get install -y nodejs zstd
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: .build
          key: ${{ runner.os }}-swift-${{ inputs.swift_version }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - run: |
          swift test
      - run: |
          chmod -R go+rx .build
